const Asena = require('../events');
const Config = require('../config');
const {MessageType, MessageOptions, Mimetype} = require('@adiwajshing/baileys');
const fs = require('fs');
const axios = require('axios');

// LIST
const EFFECT_DESC = "Text effective ‡∂ª‡∑ñ‡∂¥ ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑Ä‡∑í‡∂∞‡∑è‡∂± ‡∂ö‡∂ß‡∑ä‡∂ß‡∂Ω‡∂∫‡∂ö‡∑ä."
const NEED_WORD = "*‡∂î‡∂∂ ‡∑Ä‡∂†‡∂±‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫*"

if (Config.WORKTYPE == 'private') {

    Asena.addCommand({pattern: 'effectimg', fromMe: true, desc: EFFECT_DESC}, (async (message, match) => {    

    await message.sendMessage('üí†üìÉ ‚óè *Text ‡∑É‡∑í‡∂ß Image Effect List* ‚óè üìÉüí†\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.glitch*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∑É‡∑í‡∂ß Tiktok glitch effect.\n_(Ex: .glitch Queen/Amdi)_\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.pemoji*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Emoji ‡∑É‡∑í‡∂ß ‡∂¥‡∑í‡∂±‡∑ä‡∂≠‡∑ñ‡∂ª‡∂∫‡∂ß.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.gaming*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü gaming logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.fpslogo*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü fps gaming logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.fflogo*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü Free Fire logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.avenger*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü Avengers logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.lionlogo*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü lion logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n_(Ex: .lionlogo Queen/Amdi)_\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.metal*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü iron logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.pornhub*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text ‡∂ö‡∑Ö‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂≠‡∑í ‡∂≠‡∑ê‡∂π‡∑í‡∂Ω‡∑í ‡∂¥‡∑è‡∂ß ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n‡∂î‡∂∂ ‡∂¥‡∑í‡∑Ö‡∑í‡∑Ä‡∑ô‡∂Ω‡∑í‡∂±‡∑ä */* ‡∂∏‡∂ú‡∑í‡∂±‡∑ä ‡∑Ä‡∑ô‡∂±‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í top ‡∑É‡∑Ñ bottom text ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.sandwriting*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∑Ä‡∑ê‡∂Ω‡∑í ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.blackpink*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö black pink logo ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.blood*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∂ª‡∑î‡∂∞‡∑í‡∂ª ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.thunder*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∂Ö‡∂ö‡∑î‡∂´‡∑î ‡∑É‡∑Ñ‡∑í‡∂≠ ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.snow*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∑Ñ‡∑í‡∂∏ ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.light*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö light effect ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.cloud*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∂Ö‡∑Ñ‡∑É ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.sparkling*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∂Ø‡∑ì‡∂¥‡∑ä‡∂≠‡∑í‡∂∏‡∂≠‡∑ä ‡∂≠‡∑ö‡∂∏‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í\n‡∂î‡∂∂ ‡∂¥‡∑í‡∑Ö‡∑í‡∑Ä‡∑ô‡∂Ω‡∑í‡∂±‡∑ä */* ‡∂∏‡∂ú‡∑í‡∂±‡∑ä ‡∑Ä‡∑ô‡∂±‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í top ‡∑É‡∑Ñ bottom text ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.watercolour*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∂¢‡∂Ω ‡∑Ä‡∂ª‡∑ä‡∂´ ‡∂≠‡∑ö‡∂∏‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.neonlight*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∂±‡∑í‡∂∫‡∑ú‡∂±‡∑ä ‡∂Ü‡∂Ω‡∑ù‡∂ö ‡∂≠‡∑ö‡∂∏‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.3dtext*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ì ‡∂á‡∂≠‡∑í text ‡∂≠‡∑ä‚Äç‡∂ª‡∑í‡∂∏‡∑è‡∂´ ‡∑Ä‡∑í‡∂Ω‡∑è‡∑É‡∑í‡∂≠‡∑è‡∑Ä‡∑ö ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.v3d*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text violet ‡∂≠‡∑ä‚Äç‡∂ª‡∑í‡∂∏‡∑è‡∂´ ‡∑Ä‡∑í‡∂Ω‡∑è‡∑É‡∑í‡∂≠‡∑è‡∑Ä‡∑ö ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\nCheck github for bot:  https://github.com/BlackAmda/QueenAmdi');
        
    }));

    Asena.addCommand({pattern: 'glitch ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome2/glitch?apikey=e1ee2b3d3b00e58f2511ad95&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'pemoji ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
        
    var uri = encodeURI(match[1])
    
    var ttinullimage = await axios.get('https://api.zeks.xyz/api/emoji-image?apikey=fHZpP3j61LgH80BzanBm92jch1Q&emoji=' + uri, { responseType: 'arraybuffer' })
    
    await message.sendMessage(Buffer.from(ttinullimage.data), MessageType.image, { mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ' })

    }));


    Asena.addCommand({pattern: 'fflogo ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/epep?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'avenger ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://api.zeks.xyz/api/logoaveng?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'v3d ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/text3dbox?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'thunder ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/thundertext?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'light ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/tlight?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'metal ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/metallogo?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'candy ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://videfikri.com/api/textmaker/sweetcandy/?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'harrypotter ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://videfikri.com/api/textmaker/hpotter/?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'sparkling ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/photooxy2/arcade8bit?apikey=e1ee2b3d3b00e58f2511ad95&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'watercolour ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/watercolor?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'ninjalogo ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.NEED_WORD);

    var webimage = await axios.get(`https://docs-jojo.herokuapp.com/api/gaming?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'neonlight ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/futureneon?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'sandwriting ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/sandw?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'cloud ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/cloud?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'pornhub ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://api.zeks.xyz/api/phlogo?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg , caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'snow ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/snow3d?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'lionlogo ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

   var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}
    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome2/lionlogo?apikey=e1ee2b3d3b00e58f2511ad95&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'gaming ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/logogaming?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'fpslogo ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/fpslogo?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'lovemsg ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://videfikri.com/api/textmaker/lovemsg/?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'blood ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/bloodfrosted?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'blackpink ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/logobp?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: '3dtext ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/box3d?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));
}
else if (Config.WORKTYPE == 'public') {

    Asena.addCommand({pattern: 'effectimg', fromMe: false, desc: EFFECT_DESC}, (async (message, match) => {    

    await message.sendMessage('üí†üìÉ ‚óè *Text ‡∑É‡∑í‡∂ß Image Effect List* ‚óè üìÉüí†\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.glitch*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∑É‡∑í‡∂ß Tiktok glitch effect.\n_(Ex: .glitch Queen/Amdi)_\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.pemoji*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Emoji ‡∑É‡∑í‡∂ß ‡∂¥‡∑í‡∂±‡∑ä‡∂≠‡∑ñ‡∂ª‡∂∫‡∂ß.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.gaming*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü gaming logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.fpslogo*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü fps gaming logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.fflogo*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü Free Fire logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.avenger*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü Avengers logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.lionlogo*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü lion logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n_(Ex: .lionlogo Queen/Amdi)_\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.metal*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂î‡∂∂‡∑ö ‡∂±‡∂∏ ‡∑É‡∂∏‡∂ü iron logo ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.pornhub*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text ‡∂ö‡∑Ö‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂≠‡∑í ‡∂≠‡∑ê‡∂π‡∑í‡∂Ω‡∑í ‡∂¥‡∑è‡∂ß ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n‡∂î‡∂∂ ‡∂¥‡∑í‡∑Ö‡∑í‡∑Ä‡∑ô‡∂Ω‡∑í‡∂±‡∑ä */* ‡∂∏‡∂ú‡∑í‡∂±‡∑ä ‡∑Ä‡∑ô‡∂±‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í top ‡∑É‡∑Ñ bottom text ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.sandwriting*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∑Ä‡∑ê‡∂Ω‡∑í ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.blackpink*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö black pink logo ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.blood*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∂ª‡∑î‡∂∞‡∑í‡∂ª ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.thunder*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∂Ö‡∂ö‡∑î‡∂´‡∑î ‡∑É‡∑Ñ‡∑í‡∂≠ ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.snow*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∑Ñ‡∑í‡∂∏ ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.light*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö light effect ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.cloud*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂ë‡∂∫ ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text‡∂∫‡∑ö ‡∂Ö‡∑Ñ‡∑É ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.sparkling*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∂Ø‡∑ì‡∂¥‡∑ä‡∂≠‡∑í‡∂∏‡∂≠‡∑ä ‡∂≠‡∑ö‡∂∏‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í\n‡∂î‡∂∂ ‡∂¥‡∑í‡∑Ö‡∑í‡∑Ä‡∑ô‡∂Ω‡∑í‡∂±‡∑ä */* ‡∂∏‡∂ú‡∑í‡∂±‡∑ä ‡∑Ä‡∑ô‡∂±‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í top ‡∑É‡∑Ñ bottom text ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.watercolour*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∂¢‡∂Ω ‡∑Ä‡∂ª‡∑ä‡∂´ ‡∂≠‡∑ö‡∂∏‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.neonlight*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: Text ‡∂±‡∑í‡∂∫‡∑ú‡∂±‡∑ä ‡∂Ü‡∂Ω‡∑ù‡∂ö ‡∂≠‡∑ö‡∂∏‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.3dtext*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ì ‡∂á‡∂≠‡∑í text ‡∂≠‡∑ä‚Äç‡∂ª‡∑í‡∂∏‡∑è‡∂´ ‡∑Ä‡∑í‡∂Ω‡∑è‡∑É‡∑í‡∂≠‡∑è‡∑Ä‡∑ö ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\n‚öôÔ∏è‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫: *.v3d*\n‚ÑπÔ∏è‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: ‡∑É‡∂¥‡∂∫‡∑è ‡∂á‡∂≠‡∑í text violet ‡∂≠‡∑ä‚Äç‡∂ª‡∑í‡∂∏‡∑è‡∂´ ‡∑Ä‡∑í‡∂Ω‡∑è‡∑É‡∑í‡∂≠‡∑è‡∑Ä‡∑ö ‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.\n\nCheck github for bot:  https://github.com/BlackAmda/QueenAmdi');
    }));

    Asena.addCommand({pattern: 'glitch ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome2/glitch?apikey=e1ee2b3d3b00e58f2511ad95&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'pemoji ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
        
    var uri = encodeURI(match[1])

    var ttinullimage = await axios.get('https://api.zeks.xyz/api/emoji-image?apikey=fHZpP3j61LgH80BzanBm92jch1Q&emoji=' + uri, { responseType: 'arraybuffer' })

    await message.sendMessage(Buffer.from(ttinullimage.data), MessageType.image, { mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ' })

    }));


    Asena.addCommand({pattern: 'fflogo ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/epep?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'avenger ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://api.zeks.xyz/api/logoaveng?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'v3d ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/text3dbox?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'thunder ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/thundertext?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'light ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/tlight?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'metal ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/metallogo?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'candy ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://videfikri.com/api/textmaker/sweetcandy/?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'harrypotter ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://videfikri.com/api/textmaker/hpotter/?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'sparkling ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/photooxy2/arcade8bit?apikey=e1ee2b3d3b00e58f2511ad95&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'watercolour ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/watercolor?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'ninjalogo ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.NEED_WORD);

    var webimage = await axios.get(`https://docs-jojo.herokuapp.com/api/gaming?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'neonlight ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/futureneon?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'sandwriting ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/sandw?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'cloud ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/cloud?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'pornhub ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
  
  var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}

    var webimage = await axios.get(`https://api.zeks.xyz/api/phlogo?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg , caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'snow ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/snow3d?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'lionlogo ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

   var topText, bottomText;
    if (match[1].includes('/')) {
        var split = match[1].split('/');
        bottomText = split[1];
        topText = split[0];
}
    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome2/lionlogo?apikey=e1ee2b3d3b00e58f2511ad95&text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'gaming ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/logogaming?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'fpslogo ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/ephoto1/fpslogo?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'lovemsg ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://videfikri.com/api/textmaker/lovemsg/?text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'blood ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/bloodfrosted?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

   await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: 'blackpink ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://api.zeks.xyz/api/logobp?apikey=fHZpP3j61LgH80BzanBm92jch1Q&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));

    Asena.addCommand({pattern: '3dtext ?(.*)', fromMe: false, dontAddCommandList: true}, (async (message, match) => {

    if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

    var webimage = await axios.get(`https://lolhuman.herokuapp.com/api/textprome/box3d?apikey=e1ee2b3d3b00e58f2511ad95&text=${match[1]}`, { responseType: 'arraybuffer' })

    await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Copyright ¬© 2021 | Queen Amdi-·¥Æ ∏ ·¥ÆÀ°·µÉ·∂ú·µè ·¥¨·µê·µà·µÉ'})

    }));
}
